require 'rubygems'
require 'vertica'
def vertica_page_request(campaign_id, element_id)
vertica = Vertica.connect({
  :user     => 'insight_qa',
  :password => 'insightQA$',
  :host     => 'vertica841qa.veltimgage.com',
  :port     => '5433',
  :database => 'vltusdwhq841_01'
})

result = vertica.query("SELECT
sum(di_mweb_f.q_total_visits) AS Total_visits,
sum(di_mweb_f.q_total_page_views) AS Total_page_views,
sum(di_mweb_f.q_unique_page_views) AS Unique_page_views,
sum(di_mweb_f.q_first_time_page_views) AS First_time_page_views,
sum(di_mweb_f.q_bounces) AS Bounces,
sum(di_mweb_f.q_total_visitors) AS TotalVisitors,
avg(di_mweb_f.q_avg_page_views) AS Avrg_page_views,
avg(di_mweb_f.avg_page_view_time) AS Avrg_view_time,
avg(di_mweb_f.avg_visit_duration) AS Avrg_visit_duration,
di_mweb_f.date_time,
di_mweb_f.ref_element_id AS ad_element_id,
di_mweb_pages_d.page_element_id AS element_id
FROM
DWH_8_3_2.di_mweb_f,
DWH_8_3_2.di_mweb_pages_d
WHERE
di_mweb_f.campaign_id = #{campaign_id} AND
di_mweb_pages_d.page_element_id IN ('#{element_id}') AND
di_mweb_f.page_id = di_mweb_pages_d.page_id AND
di_mweb_f.site_id = di_mweb_pages_d.site_id
GROUP BY
di_mweb_f.ref_element_id,
di_mweb_f.date_time,
di_mweb_pages_d.page_element_id")
def array_convert(name)
 name.flatten!
name.map!{|x|x.to_i}
end


firstPageView = []
uniquePageViews = []
totalVisitors = []
totalVisits = []
totalPageViews = []

result.each_row {|row|
 row_hash=Hash.new
 row.each {|key,value|
 row_hash.store(key.to_s,value.to_s)}

 firstPageView << row_hash.values_at("First_time_page_views")
 uniquePageViews << row_hash.values_at("Unique_page_views")
 totalVisitors << row_hash.values_at("totalVisitors")
 totalVisits << row_hash.values_at("totalVisits")
 totalPageViews << row_hash.values_at("totalPageViews")
 }

  puts "First time page views = #{array_convert(firstPageView).inject{|sum,x| sum + x}}"
  puts "Unique_page_views = #{array_convert(uniquePageViews).inject{|sum,x| sum + x}}"
  puts "totalVisitors = #{array_convert(totalVisitors).inject{|sum,x| sum + x}}"
  puts "totalVisits = #{array_convert(totalVisits).inject{|sum,x| sum + x}}"
  puts "totalPageViews = #{array_convert(totalPageViews).inject{|sum,x| sum + x}}"
end


def vertica_event_request(campaign_id, element_id)
vertica = Vertica.connect({
  :user     => 'insight_qa',
  :password => 'insightQA$',
  :host     => 'vertica841qa.veltimgage.com',
  :port     => '5433',
  :database => 'vltusdwhq841_01'
})

result = vertica.query("SELECT
sum(fact_event.event_count) AS event_count,
dim_event.event_name AS event_name,
 fact_event.date_time,
--#groupDate fact_event.date,
fact_event.ref_element_id AS ad_element_id,
di_mweb_pages_d.page_element_id AS element_id
FROM
DWH_8_3_2.fact_event,
DWH_8_3_2.dim_event,
DWH_8_3_2.di_mweb_pages_d
WHERE
 fact_event.campaign_id = #{campaign_id} AND
 di_mweb_pages_d.page_element_id IN ('#{element_id}')  and
fact_event.event_id = dim_event.event_id AND
fact_event.page_id = di_mweb_pages_d.page_id AND
fact_event.site_id = di_mweb_pages_d.site_id AND
fact_event.date_time between
 '2010-01-01 09:06:36'
 AND '2012-01-06 09:06:36'
GROUP BY
dim_event.event_name,
 fact_event.date_time,
--#groupDate fact_event.date,
fact_event.ref_element_id,
di_mweb_pages_d.page_element_id")

def array_convert(name)
 name.flatten!
name.map!{|x|x.to_i}
end

  eventCount = []
  eventName = []
  eventArray = []
  result.each_row {|row|
  row_hash_number=Hash.new
  row_hash_name = Hash.new
  row.each {|key,value|
  row_hash_number.store(key.to_s,BigDecimal.new(value.to_s))
  row_hash_name.store(key.to_s,value.to_s) }
  eventCount << row_hash_number.values_at("event_count")
  eventName << row_hash_name.values_at("event_name")}
  eventCount.flatten!
  eventCount.map!{|x| x = x.to_i}
  i = 0
  puts "Name  Count"
  while i.between?(0,eventName.size)
  puts "#{eventName[i]} - #{eventCount[i]}"
    i += 1
  end
  puts "Total Event number = #{array_convert(eventCount).inject{|sum,x| sum + x}}"

end

#vertica_page_result =  vertica_page_request(3258,'3258-11011I')
   #puts "and now events \n"
vertica_event_result =  vertica_event_request(3258,'3258-11011I')